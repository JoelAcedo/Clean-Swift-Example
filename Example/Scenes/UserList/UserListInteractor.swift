//
//  UserListInteractor.swift
//  Example
//
//  Created by Joel on 05/04/2017.
//  Copyright (c) 2017 HELM S.C.P. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//

protocol UserListInteractorInput {
    func getUser(request: UserListScene.GetUser.Request)
    func selectUser(request: UserListScene.SelectUser.Request)
}

protocol UserListInteractorOutput {
    func presentUser(response: UserListScene.GetUser.Response)
}

protocol UserListDataSource {
    var selectedUser: User! { get }
}

protocol UserListDataDestination {
    
}

class UserListInteractor: UserListInteractorInput, UserListDataSource, UserListDataDestination {
    
    var output: UserListInteractorOutput?
    var worker: UserListWorker?
    
    var users: [User] = []
    var selectedUser: User!
    
    // MARK: Business logic
    
    func getUser(request: UserListScene.GetUser.Request)
    {
        worker = UserListWorker(store: UserNetworkStore())
        worker?.getUser {(result: UserStoreResult<User>) -> Void in
            
            switch result {
                case .success(let user):
                    self.users.insert(user, at: 0)
                    let response = UserListScene.GetUser.Response(newUser: user)
                    self.output?.presentUser(response: response)
                case .failure(let error):
                    print(error)
            }
        }
    }
    
    func selectUser(request: UserListScene.SelectUser.Request) {
        selectedUser = users[request.index]
    }
    
}

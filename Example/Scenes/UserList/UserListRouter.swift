//
//  UserListRouter.swift
//  Example
//
//  Created by Joel on 05/04/2017.
//  Copyright (c) 2017 HELM S.C.P. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//

import UIKit

protocol UserListRouterInput {
    func navigateToUserDetailScene()
}

protocol UserListRouterDataSource: class {
    var selectedUser: User! { get }
}

protocol UserListRouterDataDestination: class {
    
}

class UserListRouter: UserListRouterInput {
    
    weak var viewController: UserListViewController!
    weak private var dataSource: UserListRouterDataSource!
    weak var dataDestination: UserListRouterDataDestination!
    
    struct SegueIdentifiers {
        static let userDetail = "UserDetailScene"
    }
    
    init(viewController: UserListViewController, dataSource: UserListRouterDataSource, dataDestination: UserListRouterDataDestination) {
        self.viewController = viewController
        self.dataSource = dataSource
        self.dataDestination = dataDestination
    }
    
    // MARK: Navigation
    
    func navigateToUserDetailScene()
    {
        viewController.performSegue(withIdentifier: SegueIdentifiers.userDetail, sender: viewController)
    }
    
    // MARK: Communication
    
    func passDataToNextScene(for segue: UIStoryboardSegue) {
        // NOTE: Teach the router which scenes it can communicate with
        
        guard let segueIdentifier = segue.identifier else {
            return
        }
        
        switch segueIdentifier {
            case SegueIdentifiers.userDetail:
                passDataToUserDetailScene(for: segue)
            default:
                return
        }
    }
    
    func passDataToUserDetailScene(for segue: UIStoryboardSegue)
    {
        // NOTE: Teach the router how to pass data to the next scene
        
        if let userDetailViewController = segue.destination as? UserDetailViewController {
            userDetailViewController.router?.dataDestination.user = dataSource.selectedUser
        }
    }
}
